[tool.poetry]
name = "dynamics-client"
version = "0.2.0"
description = "Client for making Web API request from a Microsoft Dynamics 365 Database."
authors = [
    "Matti Lamppu <lamppu.matti.akseli@gmail.com>",
]
packages = [
    { include = "dynamics" },
]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/MrThearMan/dynamics-client/"
repository = "https://github.com/MrThearMan/dynamics-client/"
keywords = [
    "Microsoft",
    "Dynamics",
    "client"
]
classifiers = [
    "Operating System :: OS Independent",
    "Intended Audience :: Developers",
    "Natural Language :: English",
]
include = [
    "README.md",
    "LICENSE",
]
exclude = [
    "tests",
]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/MrThearMan/dynamics-client/issues"

[tool.poetry.dependencies]
python = ">=3.6.1,<4"
oauthlib = "^3.1.0"
requests-oauthlib = "^1.3.0"
pytz = "^2021.1"
typing-extensions = "^3.10.0"
# If using with django
djangorestframework = {version = "^3.12.4", optional = true}
Django = {version = "^3.2.7", optional = true}

[tool.poetry.dev-dependencies]
# For testing and CI
pytest-cov = "^2.12.1"
pre-commit = "^2.13.0"
tox-gh-actions = "^2.7.0"
tox = "^3.24.4"
coveralls = "^3.2.0"
# For documentation
mkdocs = "^1.2.2"
# For code style
flake8 = "^3.9.2"
mypy = "^0.910"

[tool.poetry.extras]
django = ["Django", "djangorestframework"]

[tool.black]
line-length = 120

[tool.isort]
profile = "black"
line_length = 120
skip_gitignore = "True"
lines_after_imports = 2

[tool.pylint.MASTER]
ignore-paths = [
    "tests/*",
    "docs/*",
    ".venv/*",
    ".tox/*",
]

[tool.pylint.messages_control]
disable = "C0330, C0326, C0114, C0115, C0116, R0903, R0913, R1721"

[tool.pylint.format]
max-line-length = "120"

[tool.pylint.miscellaneous]
notes = "FIXME,XXX,BUG"

[tool.mypy]
python_version = 3.9
warn_return_any = "True"
warn_unused_configs = "True"
plugins = [
    "mypy_django_plugin.main",
    "mypy_drf_plugin.main",
]

[tool.coverage.run]
relative_files = true

[tool.coverage.report]
omit = [
    "tests/*",
    "docs/*",
    ".venv/*",
    ".tox/*",
]
exclude_lines = [
    "if TYPE_CHECKING:",
    "except ImportError:",
]

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py{37, 38, 39}
isolated_build = true

[gh-actions]
python =
    3.7: py37
    3.8: py38
    3.9: py39

[testenv]
setenv =
    PYTHONPATH = {toxinidir}
deps =
    typing-extensions
    pytest-cov
    toml
    oauthlib
    requests-oauthlib
    pytz
commands =
    coverage run -m pytest -vv -s
"""

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
